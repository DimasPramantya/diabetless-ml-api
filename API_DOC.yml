openapi: 3.0.2
info:
  title: Diabetless API
  version: 1.0.0
servers:
  - url: https://diabetless-ml-api-a5ey42wesa-et.a.run.app
    description: Development server
  - url: http://localhost:5000
    description: Local Development server
paths:
  /detect-food:
    post:
      security:
        - bearerAuth: []
      summary: Detect Foods with ML Models.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Foods image that wants to detect.
              required:
                - image
      responses:
        "200":
          description: Nutrition Fatcs and Recommendation
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                  result:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        name:
                          type: "string"
                        type: 
                          type: "string"
                        nutrition_fact:
                          type: "object"
                          properties:
                            GL: 
                              type: "number"
                            GL_Level:
                              type: "string"  
                            GI:
                              type: "number"
                            GI_Level: 
                              type: "string"
                            Proteins:
                              type: "number"
                            Carbohydrates:
                              type: "number"
                            Fats:
                              type: "number"  
                            Calories:
                              type: "number"
                        tags:
                          type: "array"
                          items:
                            type: "string"
                        serving:
                          type: "string"
                        recommendation:
                          type: "array"
                          items:
                            type: "object"
                            properties:
                              name:
                                type: "string"
                              type:
                                type: "string"
                              nutrition_fact:
                                type: "object"
                                properties:
                                  GL: 
                                    type: "number"
                                  GL_Level:
                                    type: "string"  
                                  GI:
                                    type: "number"
                                  GI_Level: 
                                    type: "string"
                                  Proteins:
                                    type: "number"
                                  Carbohydrates:
                                    type: "number"
                                  Fats:
                                    type: "number"  
                                  Calories:
                                    type: "number"
                              tags:
                                type: "array"
                                items:
                                  type: "string"
                              serving:
                                type: "string"
                              imageUrl:
                                type: "string"
        "404":
          description: Bad request, detected foods not found in db.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the operation.
                  message:
                    type: string
                    description: Error message.
  

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
